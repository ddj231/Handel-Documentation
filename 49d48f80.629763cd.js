(window.webpackJsonp=window.webpackJsonp||[]).push([[10],{111:function(e,t,n){"use strict";n.d(t,"a",(function(){return u})),n.d(t,"b",(function(){return m}));var r=n(0),a=n.n(r);function b(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function c(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){b(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},b=Object.keys(e);for(r=0;r<b.length;r++)n=b[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var b=Object.getOwnPropertySymbols(e);for(r=0;r<b.length;r++)n=b[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var p=a.a.createContext({}),s=function(e){var t=a.a.useContext(p),n=t;return e&&(n="function"==typeof e?e(t):c(c({},t),e)),n},u=function(e){var t=s(e.components);return a.a.createElement(p.Provider,{value:t},e.children)},i={inlineCode:"code",wrapper:function(e){var t=e.children;return a.a.createElement(a.a.Fragment,{},t)}},O=a.a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,b=e.originalType,o=e.parentName,p=l(e,["components","mdxType","originalType","parentName"]),u=s(n),O=r,m=u["".concat(o,".").concat(O)]||u[O]||i[O]||b;return n?a.a.createElement(m,c(c({ref:t},p),{},{components:n})):a.a.createElement(m,c({ref:t},p))}));function m(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var b=n.length,o=new Array(b);o[0]=O;var c={};for(var l in t)hasOwnProperty.call(t,l)&&(c[l]=t[l]);c.originalType=e,c.mdxType="string"==typeof e?e:r,o[1]=c;for(var p=2;p<b;p++)o[p]=n[p];return a.a.createElement.apply(null,o)}return a.a.createElement.apply(null,n)}O.displayName="MDXCreateElement"},81:function(e,t,n){"use strict";n.r(t),n.d(t,"frontMatter",(function(){return o})),n.d(t,"metadata",(function(){return c})),n.d(t,"toc",(function(){return l})),n.d(t,"default",(function(){return s}));var r=n(3),a=n(7),b=(n(0),n(111)),o={id:"language-features",title:"Language Features"},c={unversionedId:"language-features",id:"language-features",isDocsHomePage:!1,title:"Language Features",description:"Note: A musical note. 7 octaves are available.",source:"@site/docs/language-features.md",slug:"/language-features",permalink:"/docs/language-features",editUrl:"https://github.com/facebook/docusaurus/edit/master/website/docs/language-features.md",version:"current",sidebar:"someSidebar",previous:{title:"Custom Instruments (load)",permalink:"/docs/custom-instruments"},next:{title:"Reserved Keywords",permalink:"/docs/keywords"}},l=[],p={toc:l};function s(e){var t=e.components,n=Object(a.a)(e,["components"]);return Object(b.b)("wrapper",Object(r.a)({},p,n,{components:t,mdxType:"MDXLayout"}),Object(b.b)("p",null,Object(b.b)("strong",{parentName:"p"},"Note"),": A musical note. 7 octaves are available."),Object(b.b)("pre",null,Object(b.b)("code",Object(r.a)({parentName:"pre"},{}),"C3\nEb2\nG#7\n")),Object(b.b)("br",null),Object(b.b)("p",null,Object(b.b)("strong",{parentName:"p"},"Notelist"),": A list of notes. Together this list of notes forms a chord. (6 notes maximum)."),Object(b.b)("pre",null,Object(b.b)("code",Object(r.a)({parentName:"pre"},{}),"C2, E2, G2\nC4, Eb4, G#3\n")),Object(b.b)("br",null),Object(b.b)("p",null,Object(b.b)("strong",{parentName:"p"},"Beat"),": A number of beats. A whole number followed by the character 'b'."),Object(b.b)("pre",null,Object(b.b)("code",Object(r.a)({parentName:"pre"},{}),"1b\n20b\n")),Object(b.b)("br",null),Object(b.b)("p",null,Object(b.b)("strong",{parentName:"p"},"Duration"),": An expression that represents the amount of beats to play or hold for."),Object(b.b)("pre",null,Object(b.b)("code",Object(r.a)({parentName:"pre"},{}),"for 1b\nfor 2b\n")),Object(b.b)("br",null),Object(b.b)("p",null,Object(b.b)("strong",{parentName:"p"},"Playable"),": A note or a notelist, followed by a duration. "),Object(b.b)("pre",null,Object(b.b)("code",Object(r.a)({parentName:"pre"},{}),"C1, F1, E1, D1, for 1b\nD1 for 2b\n")),Object(b.b)("br",null),Object(b.b)("p",null,Object(b.b)("strong",{parentName:"p"},"play"),": A command to play a note or notelist for a given duration. Play commands can also take a loop customization."),Object(b.b)("pre",null,Object(b.b)("code",Object(r.a)({parentName:"pre"},{}),"play C1, F1, E1, D1, for 1b\nplay D1 for 2b \nplay E3 for 2b loop for 5\n")),Object(b.b)("br",null),Object(b.b)("p",null,Object(b.b)("strong",{parentName:"p"},"rest"),": A command to rest for a given duration."),Object(b.b)("pre",null,Object(b.b)("code",Object(r.a)({parentName:"pre"},{}),"rest for 1b\nrest for 2b\n")),Object(b.b)("br",null),Object(b.b)("p",null,Object(b.b)("strong",{parentName:"p"},"save"),": A command to save a variable (see above section on variables for more details). Only playabes and durations can be saved in variables."),Object(b.b)("pre",null,Object(b.b)("code",Object(r.a)({parentName:"pre"},{}),"save myplayable = E2 for 1b\nsave myduration = for 1b\n")),Object(b.b)("br",null),Object(b.b)("p",null,Object(b.b)("strong",{parentName:"p"},"update"),": A command for reassigning variables (see above section on variable reassignment for more details). Only playabes and durations can be saved in variables."),Object(b.b)("pre",null,Object(b.b)("code",Object(r.a)({parentName:"pre"},{}),"save myplayable = E2 for 1b\nupdate myplayble = Eb2 for 2b\n\nsave mynotelist = G#4, Cb4\nupdate mynotelist lshift 2\n")),Object(b.b)("br",null),Object(b.b)("p",null,Object(b.b)("strong",{parentName:"p"},"lshift"),": Shift a notelist left a number of semitones."),Object(b.b)("p",null,Object(b.b)("strong",{parentName:"p"},"rshift"),": Shift a notelist right a number of semitones."),Object(b.b)("pre",null,Object(b.b)("code",Object(r.a)({parentName:"pre"},{}),"save mynotelist = D#4, C4\nupdate mynotelist lshift 2\nupdate mynotelist rshift 4\n")),Object(b.b)("br",null),Object(b.b)("p",null,Object(b.b)("strong",{parentName:"p"},"load"),": A command to load custom instruments into Handel (see above section on custom instruments for more details). "),Object(b.b)("pre",null,Object(b.b)("code",Object(r.a)({parentName:"pre"},{}),"load someinst as instname\n")),Object(b.b)("br",null),Object(b.b)("p",null,Object(b.b)("strong",{parentName:"p"},"lessthan"),": comparison operator"),Object(b.b)("p",null,Object(b.b)("strong",{parentName:"p"},"greaterthan"),": comparison operator"),Object(b.b)("p",null,Object(b.b)("strong",{parentName:"p"},"equalto"),": comparison operator"),Object(b.b)("pre",null,Object(b.b)("code",Object(r.a)({parentName:"pre"},{}),"1 lessthan 2\nC5 greaterthan C3 \nfor 3b equalto for 3b\n")),Object(b.b)("br",null),Object(b.b)("p",null,Object(b.b)("strong",{parentName:"p"},"block"),": Used to declare a loop. (see above section on block loops for more details)"),Object(b.b)("pre",null,Object(b.b)("code",Object(r.a)({parentName:"pre"},{}),"block\n    play Gb3 for 2b\n    rest for 2b\nendblock loop for 10\n")),Object(b.b)("br",null),Object(b.b)("p",null,Object(b.b)("strong",{parentName:"p"},"chunk"),": Used to declare a procedure. (see above section on procedures for more details)"),Object(b.b)("pre",null,Object(b.b)("code",Object(r.a)({parentName:"pre"},{}),"chunk mybassline\n    play G1 for 2b\nendchunk\n")),Object(b.b)("br",null),Object(b.b)("p",null,Object(b.b)("strong",{parentName:"p"},"using"),": Used to prepend a list of paramaters for a chunk."),Object(b.b)("pre",null,Object(b.b)("code",Object(r.a)({parentName:"pre"},{}),"chunk mypiano using nicechord\n    play nicechord \nendchunk\n")),Object(b.b)("br",null),Object(b.b)("p",null,Object(b.b)("strong",{parentName:"p"},"run"),": Used to run a chunk. (see above section on running procedures for more details)."),Object(b.b)("pre",null,Object(b.b)("code",Object(r.a)({parentName:"pre"},{}),"run mypiano using E2, C#2 for 1b \n")),Object(b.b)("br",null),Object(b.b)("p",null,Object(b.b)("strong",{parentName:"p"},"with"),": Used to customize a given run of a chunk. (see section on procedures above for more details)"),Object(b.b)("pre",null,Object(b.b)("code",Object(r.a)({parentName:"pre"},{}),"run mybassline with bpm 115\n")),Object(b.b)("br",null),Object(b.b)("p",null,Object(b.b)("strong",{parentName:"p"},"bpm"),": beats per minute (bpms are best synced with values under 1000). "),Object(b.b)("br",null),Object(b.b)("p",null,Object(b.b)("strong",{parentName:"p"},"loop"),": amount of times to loop"),Object(b.b)("br",null),Object(b.b)("p",null,Object(b.b)("strong",{parentName:"p"},"sound"),":  instrument to use. "),Object(b.b)("br",null),Object(b.b)("p",null,Object(b.b)("strong",{parentName:"p"},"volume"),":  percentage volume of a chunk (0 - 100). "),Object(b.b)("br",null),Object(b.b)("p",null,Object(b.b)("strong",{parentName:"p"},"reverb"),": reverberation duration in miliseconds (>= 1). "),Object(b.b)("br",null),Object(b.b)("p",null,Object(b.b)("strong",{parentName:"p"},"pan"),": amount to pan the sound of a chunk (0 - 100). Note: 0 = hard-left, 50 = center, 100 = hard-right."),Object(b.b)("pre",null,Object(b.b)("code",Object(r.a)({parentName:"pre"},{}),"run mybassline with bpm 90, loop for 2, sound kick, volume 50, pan 25, reverb 10000\n")),Object(b.b)("br",null),Object(b.b)("p",null,Object(b.b)("strong",{parentName:"p"},"Sounds"),": possible sounds that can be used to customize a run of a chunk."),Object(b.b)("pre",null,Object(b.b)("code",Object(r.a)({parentName:"pre"},{}),"piano\nguitar\nsynth \ncasio\nkick \nsnare\nhihat\n")))}s.isMDXComponent=!0}}]);